[{"/home/tulika/projects/Task/my-app-redux/src/index.js":"1","/home/tulika/projects/Task/my-app-redux/src/reportWebVitals.js":"2","/home/tulika/projects/Task/my-app-redux/src/App2.js":"3","/home/tulika/projects/Task/my-app-redux/src/Components/UserDetails2.js":"4","/home/tulika/projects/Task/my-app-redux/src/App.js":"5","/home/tulika/projects/Task/my-app-redux/src/Components/UserDetails.js":"6","/home/tulika/projects/Task/my-app-redux/src/_store/store.js":"7","/home/tulika/projects/Task/my-app-redux/src/_reducers/reducer.js":"8","/home/tulika/projects/Task/my-app-redux/src/_actionCreators/actionCreator.js":"9","/home/tulika/projects/Task/my-app-redux/src/Components/Filter.js":"10"},{"size":634,"mtime":1659687092310,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":1658055581070,"results":"13","hashOfConfig":"12"},{"size":2259,"mtime":1659687183175,"results":"14","hashOfConfig":"12"},{"size":3001,"mtime":1658921927070,"results":"15","hashOfConfig":"12"},{"size":3286,"mtime":1659516264790,"results":"16","hashOfConfig":"12"},{"size":5701,"mtime":1659517647652,"results":"17","hashOfConfig":"12"},{"size":236,"mtime":1659344107361,"results":"18","hashOfConfig":"12"},{"size":1765,"mtime":1659518543830,"results":"19","hashOfConfig":"12"},{"size":676,"mtime":1659522563334,"results":"20","hashOfConfig":"12"},{"size":2257,"mtime":1659523121721,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1rhhho5",{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/tulika/projects/Task/my-app-redux/src/index.js",[],[],"/home/tulika/projects/Task/my-app-redux/src/reportWebVitals.js",[],[],[],"/home/tulika/projects/Task/my-app-redux/src/App2.js",[],[],"/home/tulika/projects/Task/my-app-redux/src/Components/UserDetails2.js",["55","56"],[],"import React,{useState,useEffect} from 'react'\nimport axios from 'axios';\n\nfunction UserDetails2(props) {\n    const {selectedTag} = props\n    const[postsArray,setPostsArray] = useState([])\n    const[error,setError] = useState(\"\")\n\n    const controller = new AbortController();\n\n    useEffect(() => {\n        if(\n            selectedTag !== null &&\n            selectedTag !== undefined &&\n            typeof selectedTag === \"string\" \n        )\n        {\n            const url = \"https://dummyapi.io/data/v1/tag/\" + encodeURIComponent(selectedTag) + \"/post?limit=10\";\n            console.log(url);\n            setPostsArray([]);\n            setError(\"\")\n            axios.get(url, { \n                headers: {'app-id': '62d3c0b515f0055e65f63809'},\n                signal: controller.signal\n            }).then((successResp) => {\n                console.warn(\"successResp : \", successResp)\n                let array = successResp.data.data;\n                let xArray = array.filter((a) => {\n                    if(a && typeof a === \"object\") {\n                        return true\n                    } else {\n                        return false;\n                    }\n                });  \n                console.warn(\"xArray : \", xArray);\n\n                setPostsArray(xArray)\n                if(xArray.length === 0)\n                    setError(\"No posts found\")             \n            }).catch((failureResp) => {\n                console.warn(\"failureResp : \", failureResp)\n                setError(\"Some Unexpected error occureed. Could not fetch posts.\")\n                setPostsArray([])    \n            })      \n        }\n\n        //the following function will be called on unmount of this comp\n        return function() {\n            console.warn(\"unmounting the user details 2 component\");\n            controller.abort();\n        }    \n    },[selectedTag])\n\n    let result = null;\n    if(selectedTag) {\n        result = (\n                <div>\n                <div className='selected_tag'>Showing posts for - {selectedTag}</div>\n                <div className='err'>{error}</div>\n                 <div className='posts_parent'>\n                {\n                postsArray.map((element) => {\n                    return (\n                        <div className='post'>\n                            {/** left **************/}\n                            <div className='left'>\n                                <img src={element.image}/>\n                            </div>\n\n                            {/** right **************/}\n                            <div className='right'>\n                                <div className='text'>{element.text}</div>\n                                <div>{element.likes}</div>\n                            </div>\n                        </div>\n                    )\n                })\n        }\n       </div>\n        \n        </div>\n        )\n    }\n    else{\n        result = \"No tag selected\";\n}\n\nreturn (\n    result\n)\n}\nexport default UserDetails2\n\n\n\n\n",[],"/home/tulika/projects/Task/my-app-redux/src/App.js",[],[],"/home/tulika/projects/Task/my-app-redux/src/Components/UserDetails.js",["57"],[],"/home/tulika/projects/Task/my-app-redux/src/_store/store.js",[],[],"/home/tulika/projects/Task/my-app-redux/src/_reducers/reducer.js",[],[],"/home/tulika/projects/Task/my-app-redux/src/_actionCreators/actionCreator.js",[],[],"/home/tulika/projects/Task/my-app-redux/src/Components/Filter.js",["58"],[],{"ruleId":"59","severity":1,"message":"60","line":52,"column":7,"nodeType":"61","endLine":52,"endColumn":20,"suggestions":"62"},{"ruleId":"63","severity":1,"message":"64","line":67,"column":33,"nodeType":"65","endLine":67,"endColumn":59},{"ruleId":"63","severity":1,"message":"64","line":134,"column":41,"nodeType":"65","endLine":134,"endColumn":67},{"ruleId":"66","severity":1,"message":"67","line":7,"column":5,"nodeType":"68","messageId":"69","endLine":9,"endColumn":6},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'controller'. Either include it or remove the dependency array.","ArrayExpression",["70"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor",{"desc":"71","fix":"72"},"Update the dependencies array to be: [controller, selectedTag]",{"range":"73","text":"74"},[1855,1868],"[controller, selectedTag]"]