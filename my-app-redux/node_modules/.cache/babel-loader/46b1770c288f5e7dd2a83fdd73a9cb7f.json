{"ast":null,"code":"var _jsxFileName = \"/home/tulika/projects/Task/my-app-redux/src/App.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport UserDetails from './Components/UserDetails';\nimport { connect } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.setTag = ele => {// this.setState({\n      //   selectedTag: ele\n      // })\n      // store.dispatch(\"SET_SELECTED_TAG\");\n    };\n\n    this.resetTagState = () => {// this.setState({\n      //   selectedTag: null,\n      //   dataArr: []\n      // })\n      // store.dispatch(\"UNSET_STATE\");\n    };\n\n    console.log(\"props :\", props); //props is an object\n    // {\n    // store: {},\n    // dispatch: funtion\n    // }\n\n    this.state = {//  dataArr: [],\n      //  selectedTag: null\n    };\n  } //trim the array for 10 elements\n  //remove empty elements\n  //remove extra spaces\n\n\n  async componentDidMount() {\n    const response = await axios.get(\"https://dummyapi.io/data/v1/tag?limit=10\", {\n      headers: {\n        'app-id': '62d3c0b515f0055e65f63809'\n      }\n    });\n\n    if (response.status === 200) {\n      let dummy = response.data;\n      let arr = dummy.data;\n      let arrClone = arr.slice(0, 10);\n      let arr1 = arrClone.filter(function (el) {\n        return el !== null && el !== '';\n      });\n      let arr2 = arr1.map(function (el) {\n        return el.trim();\n      });\n      console.log(\"final array\", arr2); // this.setState({\n      //   dataArr: arr2,\n      // })\n    }\n  }\n\n  render() {\n    const arr = this.props.store.dataArr;\n    const tag = this.props.store.selectedTag;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ColumnLeft\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: arr.map((element, index) => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              onClick: () => {\n                this.setTag(element);\n              },\n              className: \"tag \" + (tag === element ? \"active_tag\" : \"\"),\n              children: element\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: true ? /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              this.resetTagState();\n            },\n            children: \"Reset \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 28\n          }, this) : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ColumnRight\",\n        children: arr.length > 0 ? /*#__PURE__*/_jsxDEV(UserDetails, {\n          selectedTag: this.props.store.selectedTag\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 32\n        }, this) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStoreToProps = _store => {\n  //console.log(\"mapStoreToProps : \", _store);\n  return {\n    store: _store\n  };\n};\n\nconst mapDispatchToProps = _dispatch => {\n  //console.log(\"mapDispatchToProps : \", _dispatch);\n  return {\n    dispatch: _dispatch\n  };\n};\n\nconst ConnectedApp = connect(mapStoreToProps, mapDispatchToProps)(App);\nexport default ConnectedApp;","map":{"version":3,"names":["React","Component","axios","UserDetails","connect","App","constructor","props","setTag","ele","resetTagState","console","log","state","componentDidMount","response","get","headers","status","dummy","data","arr","arrClone","slice","arr1","filter","el","arr2","map","trim","render","store","dataArr","tag","selectedTag","element","index","length","mapStoreToProps","_store","mapDispatchToProps","_dispatch","dispatch","ConnectedApp"],"sources":["/home/tulika/projects/Task/my-app-redux/src/App.js"],"sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport UserDetails from './Components/UserDetails';\nimport { connect } from 'react-redux';\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n  \n    console.log(\"props :\",props);\n    //props is an object\n    // {\n          // store: {},\n          // dispatch: funtion\n    // }\n    this.state = {\n      //  dataArr: [],\n      //  selectedTag: null\n    }\n  }\n\n  //trim the array for 10 elements\n  //remove empty elements\n  //remove extra spaces\n  async componentDidMount() {\n    const response = await axios\n    .get(\"https://dummyapi.io/data/v1/tag?limit=10\",{ \n      headers: {'app-id': '62d3c0b515f0055e65f63809'},\n    })\n\n    if(response.status === 200) {\n      let dummy = response.data;\n      let arr = dummy.data;\n\n      let arrClone = arr.slice(0,10);\n\n      let arr1 = arrClone.filter(function (el) {\n        return (el !== null && el !== '') ;\n      });\n\n      let arr2 = arr1.map(function (el) {\n        return (el.trim()) ;\n      });\n\n      console.log(\"final array\" ,arr2);\n      \n      // this.setState({\n      //   dataArr: arr2,\n      // })\n    }\n  }\n\n  setTag = (ele) => {\n    // this.setState({\n    //   selectedTag: ele\n    // })\n    // store.dispatch(\"SET_SELECTED_TAG\");\n  }\n  resetTagState = () => {\n    // this.setState({\n    //   selectedTag: null,\n    //   dataArr: []\n    // })\n    // store.dispatch(\"UNSET_STATE\");\n  }\n  \n  render() {\n    const arr = this.props.store.dataArr; \n    const tag = this.props.store.selectedTag;\n\n    return (\n      <div className='Row'>\n        <div className = 'ColumnLeft'> \n          <div>\n            {/* populate the data from state here */}\n            {arr.map((element, index) => {\n              return(\n                <div key={index} onClick = {\n                    () => {\n                      this.setTag(element)\n                    }\n                  }\n                  className={\"tag \" + (tag === element ? \"active_tag\" : \"\")}\n                >\n                  {element}                  \n                </div>\n              );\n            })}\n          </div>\n\n          <div >\n            {\n                (true) ?   <button onClick={() => {  this.resetTagState() }}> \n                Reset </button> : \"\"\n            \n            }\n          </div>\n\n          {/* <button onClick={() => {  this.resetTagState() }}> \n              Reset </button> */}\n          \n        </div>\n        <div className = 'ColumnRight'>\n          {\n            (arr.length > 0) ? <UserDetails selectedTag={this.props.store.selectedTag} /> : null\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStoreToProps = (_store) => {\n  //console.log(\"mapStoreToProps : \", _store);\n\n  return {\n    store: _store\n  }\n};\n\nconst mapDispatchToProps = (_dispatch) => {\n  //console.log(\"mapDispatchToProps : \", _dispatch);\n\n  return {\n    dispatch: _dispatch\n  }\n};\n\nconst ConnectedApp = connect(\n  mapStoreToProps,\n  mapDispatchToProps\n)(App);\n\nexport default ConnectedApp;"],"mappings":"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"},"metadata":{},"sourceType":"module"}